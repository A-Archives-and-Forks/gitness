// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"context"

	"github.com/harness/gitness/internal/auth/authn"
	"github.com/harness/gitness/internal/auth/authz"
	"github.com/harness/gitness/internal/cron"
	"github.com/harness/gitness/internal/router"
	"github.com/harness/gitness/internal/server"
	"github.com/harness/gitness/internal/store/database"
	"github.com/harness/gitness/internal/store/memory"
	"github.com/harness/gitness/types"
)

// Injectors from wire.go:

func initSystem(ctx context.Context, config *types.Config) (*system, error) {
	systemStore := memory.New(config)
	db, err := database.ProvideDatabase(ctx, config)
	if err != nil {
		return nil, err
	}
	userStore := database.ProvideUserStore(db)
	spaceStore := database.ProvideSpaceStore(db)
	repoStore := database.ProvideRepoStore(db)
	tokenStore := database.ProvideTokenStore(db)
	serviceAccountStore := database.ProvideServiceAccountStore(db)
	authenticator := authn.NewTokenAuthenticator(userStore, serviceAccountStore, tokenStore)
	authorizer := authz.NewUnsafeAuthorizer()
	handler, err := router.New(systemStore, userStore, spaceStore, repoStore, tokenStore, serviceAccountStore, authenticator, authorizer)
	if err != nil {
		return nil, err
	}
	serverServer := server.ProvideServer(config, handler)
	nightly := cron.NewNightly()
	serverSystem := newSystem(serverServer, nightly)
	return serverSystem, nil
}
