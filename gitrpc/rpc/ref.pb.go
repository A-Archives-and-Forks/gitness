// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: ref.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListBranchesRequest_SortOption int32

const (
	ListBranchesRequest_Default ListBranchesRequest_SortOption = 0
	ListBranchesRequest_Name    ListBranchesRequest_SortOption = 1
	ListBranchesRequest_Date    ListBranchesRequest_SortOption = 2
)

// Enum value maps for ListBranchesRequest_SortOption.
var (
	ListBranchesRequest_SortOption_name = map[int32]string{
		0: "Default",
		1: "Name",
		2: "Date",
	}
	ListBranchesRequest_SortOption_value = map[string]int32{
		"Default": 0,
		"Name":    1,
		"Date":    2,
	}
)

func (x ListBranchesRequest_SortOption) Enum() *ListBranchesRequest_SortOption {
	p := new(ListBranchesRequest_SortOption)
	*p = x
	return p
}

func (x ListBranchesRequest_SortOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListBranchesRequest_SortOption) Descriptor() protoreflect.EnumDescriptor {
	return file_ref_proto_enumTypes[0].Descriptor()
}

func (ListBranchesRequest_SortOption) Type() protoreflect.EnumType {
	return &file_ref_proto_enumTypes[0]
}

func (x ListBranchesRequest_SortOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListBranchesRequest_SortOption.Descriptor instead.
func (ListBranchesRequest_SortOption) EnumDescriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{4, 0}
}

type ListCommitTagsRequest_SortOption int32

const (
	ListCommitTagsRequest_Default ListCommitTagsRequest_SortOption = 0
	ListCommitTagsRequest_Name    ListCommitTagsRequest_SortOption = 1
	ListCommitTagsRequest_Date    ListCommitTagsRequest_SortOption = 2
)

// Enum value maps for ListCommitTagsRequest_SortOption.
var (
	ListCommitTagsRequest_SortOption_name = map[int32]string{
		0: "Default",
		1: "Name",
		2: "Date",
	}
	ListCommitTagsRequest_SortOption_value = map[string]int32{
		"Default": 0,
		"Name":    1,
		"Date":    2,
	}
)

func (x ListCommitTagsRequest_SortOption) Enum() *ListCommitTagsRequest_SortOption {
	p := new(ListCommitTagsRequest_SortOption)
	*p = x
	return p
}

func (x ListCommitTagsRequest_SortOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListCommitTagsRequest_SortOption) Descriptor() protoreflect.EnumDescriptor {
	return file_ref_proto_enumTypes[1].Descriptor()
}

func (ListCommitTagsRequest_SortOption) Type() protoreflect.EnumType {
	return &file_ref_proto_enumTypes[1]
}

func (x ListCommitTagsRequest_SortOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListCommitTagsRequest_SortOption.Descriptor instead.
func (ListCommitTagsRequest_SortOption) EnumDescriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{7, 0}
}

type CreateBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUid    string `protobuf:"bytes,1,opt,name=repo_uid,json=repoUid,proto3" json:"repo_uid,omitempty"`
	BranchName string `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Target     string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *CreateBranchRequest) Reset() {
	*x = CreateBranchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchRequest) ProtoMessage() {}

func (x *CreateBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchRequest.ProtoReflect.Descriptor instead.
func (*CreateBranchRequest) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBranchRequest) GetRepoUid() string {
	if x != nil {
		return x.RepoUid
	}
	return ""
}

func (x *CreateBranchRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *CreateBranchRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type CreateBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch *Branch `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *CreateBranchResponse) Reset() {
	*x = CreateBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchResponse) ProtoMessage() {}

func (x *CreateBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchResponse.ProtoReflect.Descriptor instead.
func (*CreateBranchResponse) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBranchResponse) GetBranch() *Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

type DeleteBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUid    string `protobuf:"bytes,1,opt,name=repo_uid,json=repoUid,proto3" json:"repo_uid,omitempty"`
	BranchName string `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Force      bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *DeleteBranchRequest) Reset() {
	*x = DeleteBranchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchRequest) ProtoMessage() {}

func (x *DeleteBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchRequest.ProtoReflect.Descriptor instead.
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteBranchRequest) GetRepoUid() string {
	if x != nil {
		return x.RepoUid
	}
	return ""
}

func (x *DeleteBranchRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *DeleteBranchRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBranchResponse) Reset() {
	*x = DeleteBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchResponse) ProtoMessage() {}

func (x *DeleteBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchResponse.ProtoReflect.Descriptor instead.
func (*DeleteBranchResponse) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{3}
}

type ListBranchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUid       string                         `protobuf:"bytes,1,opt,name=repo_uid,json=repoUid,proto3" json:"repo_uid,omitempty"`
	IncludeCommit bool                           `protobuf:"varint,2,opt,name=include_commit,json=includeCommit,proto3" json:"include_commit,omitempty"`
	Query         string                         `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Sort          ListBranchesRequest_SortOption `protobuf:"varint,4,opt,name=sort,proto3,enum=rpc.ListBranchesRequest_SortOption" json:"sort,omitempty"`
	Order         SortOrder                      `protobuf:"varint,5,opt,name=order,proto3,enum=rpc.SortOrder" json:"order,omitempty"`
	Page          int32                          `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                          `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListBranchesRequest) Reset() {
	*x = ListBranchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBranchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchesRequest) ProtoMessage() {}

func (x *ListBranchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchesRequest.ProtoReflect.Descriptor instead.
func (*ListBranchesRequest) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{4}
}

func (x *ListBranchesRequest) GetRepoUid() string {
	if x != nil {
		return x.RepoUid
	}
	return ""
}

func (x *ListBranchesRequest) GetIncludeCommit() bool {
	if x != nil {
		return x.IncludeCommit
	}
	return false
}

func (x *ListBranchesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListBranchesRequest) GetSort() ListBranchesRequest_SortOption {
	if x != nil {
		return x.Sort
	}
	return ListBranchesRequest_Default
}

func (x *ListBranchesRequest) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_Default
}

func (x *ListBranchesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBranchesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListBranchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch *Branch `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *ListBranchesResponse) Reset() {
	*x = ListBranchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBranchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchesResponse) ProtoMessage() {}

func (x *ListBranchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchesResponse.ProtoReflect.Descriptor instead.
func (*ListBranchesResponse) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{5}
}

func (x *ListBranchesResponse) GetBranch() *Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha    string  `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Commit *Commit `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *Branch) Reset() {
	*x = Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{6}
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *Branch) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type ListCommitTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUid       string                           `protobuf:"bytes,1,opt,name=repo_uid,json=repoUid,proto3" json:"repo_uid,omitempty"`
	IncludeCommit bool                             `protobuf:"varint,2,opt,name=include_commit,json=includeCommit,proto3" json:"include_commit,omitempty"`
	Query         string                           `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Sort          ListCommitTagsRequest_SortOption `protobuf:"varint,4,opt,name=sort,proto3,enum=rpc.ListCommitTagsRequest_SortOption" json:"sort,omitempty"`
	Order         SortOrder                        `protobuf:"varint,5,opt,name=order,proto3,enum=rpc.SortOrder" json:"order,omitempty"`
	Page          int32                            `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                            `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListCommitTagsRequest) Reset() {
	*x = ListCommitTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitTagsRequest) ProtoMessage() {}

func (x *ListCommitTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitTagsRequest.ProtoReflect.Descriptor instead.
func (*ListCommitTagsRequest) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{7}
}

func (x *ListCommitTagsRequest) GetRepoUid() string {
	if x != nil {
		return x.RepoUid
	}
	return ""
}

func (x *ListCommitTagsRequest) GetIncludeCommit() bool {
	if x != nil {
		return x.IncludeCommit
	}
	return false
}

func (x *ListCommitTagsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListCommitTagsRequest) GetSort() ListCommitTagsRequest_SortOption {
	if x != nil {
		return x.Sort
	}
	return ListCommitTagsRequest_Default
}

func (x *ListCommitTagsRequest) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_Default
}

func (x *ListCommitTagsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCommitTagsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListCommitTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *CommitTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ListCommitTagsResponse) Reset() {
	*x = ListCommitTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitTagsResponse) ProtoMessage() {}

func (x *ListCommitTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitTagsResponse.ProtoReflect.Descriptor instead.
func (*ListCommitTagsResponse) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{8}
}

func (x *ListCommitTagsResponse) GetTag() *CommitTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type CommitTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha         string     `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	IsAnnotated bool       `protobuf:"varint,3,opt,name=is_annotated,json=isAnnotated,proto3" json:"is_annotated,omitempty"`
	Title       string     `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Message     string     `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Tagger      *Signature `protobuf:"bytes,6,opt,name=tagger,proto3" json:"tagger,omitempty"`
	Commit      *Commit    `protobuf:"bytes,7,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *CommitTag) Reset() {
	*x = CommitTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ref_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTag) ProtoMessage() {}

func (x *CommitTag) ProtoReflect() protoreflect.Message {
	mi := &file_ref_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTag.ProtoReflect.Descriptor instead.
func (*CommitTag) Descriptor() ([]byte, []int) {
	return file_ref_proto_rawDescGZIP(), []int{9}
}

func (x *CommitTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommitTag) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *CommitTag) GetIsAnnotated() bool {
	if x != nil {
		return x.IsAnnotated
	}
	return false
}

func (x *CommitTag) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CommitTag) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommitTag) GetTagger() *Signature {
	if x != nil {
		return x.Tagger
	}
	return nil
}

func (x *CommitTag) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

var File_ref_proto protoreflect.FileDescriptor

var file_ref_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63,
	0x1a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x67, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x24, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2d, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x10, 0x02, 0x22, 0x3b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x22, 0x53, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x68, 0x61, 0x12, 0x23, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2d, 0x0a, 0x0a, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x10, 0x02, 0x22, 0x3a, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xd1, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x32, 0xb0, 0x02, 0x0a, 0x10, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x4b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x72, 0x6e, 0x65,
	0x73, 0x73, 0x2f, 0x67, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x67, 0x69, 0x74, 0x72, 0x70,
	0x63, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ref_proto_rawDescOnce sync.Once
	file_ref_proto_rawDescData = file_ref_proto_rawDesc
)

func file_ref_proto_rawDescGZIP() []byte {
	file_ref_proto_rawDescOnce.Do(func() {
		file_ref_proto_rawDescData = protoimpl.X.CompressGZIP(file_ref_proto_rawDescData)
	})
	return file_ref_proto_rawDescData
}

var file_ref_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ref_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ref_proto_goTypes = []interface{}{
	(ListBranchesRequest_SortOption)(0),   // 0: rpc.ListBranchesRequest.SortOption
	(ListCommitTagsRequest_SortOption)(0), // 1: rpc.ListCommitTagsRequest.SortOption
	(*CreateBranchRequest)(nil),           // 2: rpc.CreateBranchRequest
	(*CreateBranchResponse)(nil),          // 3: rpc.CreateBranchResponse
	(*DeleteBranchRequest)(nil),           // 4: rpc.DeleteBranchRequest
	(*DeleteBranchResponse)(nil),          // 5: rpc.DeleteBranchResponse
	(*ListBranchesRequest)(nil),           // 6: rpc.ListBranchesRequest
	(*ListBranchesResponse)(nil),          // 7: rpc.ListBranchesResponse
	(*Branch)(nil),                        // 8: rpc.Branch
	(*ListCommitTagsRequest)(nil),         // 9: rpc.ListCommitTagsRequest
	(*ListCommitTagsResponse)(nil),        // 10: rpc.ListCommitTagsResponse
	(*CommitTag)(nil),                     // 11: rpc.CommitTag
	(SortOrder)(0),                        // 12: rpc.SortOrder
	(*Commit)(nil),                        // 13: rpc.Commit
	(*Signature)(nil),                     // 14: rpc.Signature
}
var file_ref_proto_depIdxs = []int32{
	8,  // 0: rpc.CreateBranchResponse.branch:type_name -> rpc.Branch
	0,  // 1: rpc.ListBranchesRequest.sort:type_name -> rpc.ListBranchesRequest.SortOption
	12, // 2: rpc.ListBranchesRequest.order:type_name -> rpc.SortOrder
	8,  // 3: rpc.ListBranchesResponse.branch:type_name -> rpc.Branch
	13, // 4: rpc.Branch.commit:type_name -> rpc.Commit
	1,  // 5: rpc.ListCommitTagsRequest.sort:type_name -> rpc.ListCommitTagsRequest.SortOption
	12, // 6: rpc.ListCommitTagsRequest.order:type_name -> rpc.SortOrder
	11, // 7: rpc.ListCommitTagsResponse.tag:type_name -> rpc.CommitTag
	14, // 8: rpc.CommitTag.tagger:type_name -> rpc.Signature
	13, // 9: rpc.CommitTag.commit:type_name -> rpc.Commit
	2,  // 10: rpc.ReferenceService.CreateBranch:input_type -> rpc.CreateBranchRequest
	4,  // 11: rpc.ReferenceService.DeleteBranch:input_type -> rpc.DeleteBranchRequest
	6,  // 12: rpc.ReferenceService.ListBranches:input_type -> rpc.ListBranchesRequest
	9,  // 13: rpc.ReferenceService.ListCommitTags:input_type -> rpc.ListCommitTagsRequest
	3,  // 14: rpc.ReferenceService.CreateBranch:output_type -> rpc.CreateBranchResponse
	5,  // 15: rpc.ReferenceService.DeleteBranch:output_type -> rpc.DeleteBranchResponse
	7,  // 16: rpc.ReferenceService.ListBranches:output_type -> rpc.ListBranchesResponse
	10, // 17: rpc.ReferenceService.ListCommitTags:output_type -> rpc.ListCommitTagsResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ref_proto_init() }
func file_ref_proto_init() {
	if File_ref_proto != nil {
		return
	}
	file_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ref_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBranchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBranchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBranchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBranchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ref_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ref_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ref_proto_goTypes,
		DependencyIndexes: file_ref_proto_depIdxs,
		EnumInfos:         file_ref_proto_enumTypes,
		MessageInfos:      file_ref_proto_msgTypes,
	}.Build()
	File_ref_proto = out.File
	file_ref_proto_rawDesc = nil
	file_ref_proto_goTypes = nil
	file_ref_proto_depIdxs = nil
}
