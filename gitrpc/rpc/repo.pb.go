// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: repo.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreeNodeType int32

const (
	TreeNodeType_TreeNodeTypeTree   TreeNodeType = 0
	TreeNodeType_TreeNodeTypeBlob   TreeNodeType = 1
	TreeNodeType_TreeNodeTypeCommit TreeNodeType = 2
)

// Enum value maps for TreeNodeType.
var (
	TreeNodeType_name = map[int32]string{
		0: "TreeNodeTypeTree",
		1: "TreeNodeTypeBlob",
		2: "TreeNodeTypeCommit",
	}
	TreeNodeType_value = map[string]int32{
		"TreeNodeTypeTree":   0,
		"TreeNodeTypeBlob":   1,
		"TreeNodeTypeCommit": 2,
	}
)

func (x TreeNodeType) Enum() *TreeNodeType {
	p := new(TreeNodeType)
	*p = x
	return p
}

func (x TreeNodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreeNodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_repo_proto_enumTypes[0].Descriptor()
}

func (TreeNodeType) Type() protoreflect.EnumType {
	return &file_repo_proto_enumTypes[0]
}

func (x TreeNodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreeNodeType.Descriptor instead.
func (TreeNodeType) EnumDescriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{0}
}

type TreeNodeMode int32

const (
	TreeNodeMode_TreeNodeModeFile    TreeNodeMode = 0
	TreeNodeMode_TreeNodeModeSymlink TreeNodeMode = 1
	TreeNodeMode_TreeNodeModeExec    TreeNodeMode = 2
	TreeNodeMode_TreeNodeModeTree    TreeNodeMode = 3
	TreeNodeMode_TreeNodeModeCommit  TreeNodeMode = 4
)

// Enum value maps for TreeNodeMode.
var (
	TreeNodeMode_name = map[int32]string{
		0: "TreeNodeModeFile",
		1: "TreeNodeModeSymlink",
		2: "TreeNodeModeExec",
		3: "TreeNodeModeTree",
		4: "TreeNodeModeCommit",
	}
	TreeNodeMode_value = map[string]int32{
		"TreeNodeModeFile":    0,
		"TreeNodeModeSymlink": 1,
		"TreeNodeModeExec":    2,
		"TreeNodeModeTree":    3,
		"TreeNodeModeCommit":  4,
	}
)

func (x TreeNodeMode) Enum() *TreeNodeMode {
	p := new(TreeNodeMode)
	*p = x
	return p
}

func (x TreeNodeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TreeNodeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_repo_proto_enumTypes[1].Descriptor()
}

func (TreeNodeMode) Type() protoreflect.EnumType {
	return &file_repo_proto_enumTypes[1]
}

func (x TreeNodeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TreeNodeMode.Descriptor instead.
func (TreeNodeMode) EnumDescriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{1}
}

type CreateRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*CreateRepositoryRequest_Header
	//	*CreateRepositoryRequest_File
	Data isCreateRepositoryRequest_Data `protobuf_oneof:"data"`
}

func (x *CreateRepositoryRequest) Reset() {
	*x = CreateRepositoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryRequest) ProtoMessage() {}

func (x *CreateRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryRequest.ProtoReflect.Descriptor instead.
func (*CreateRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{0}
}

func (m *CreateRepositoryRequest) GetData() isCreateRepositoryRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CreateRepositoryRequest) GetHeader() *CreateRepositoryRequestHeader {
	if x, ok := x.GetData().(*CreateRepositoryRequest_Header); ok {
		return x.Header
	}
	return nil
}

func (x *CreateRepositoryRequest) GetFile() *FileUpload {
	if x, ok := x.GetData().(*CreateRepositoryRequest_File); ok {
		return x.File
	}
	return nil
}

type isCreateRepositoryRequest_Data interface {
	isCreateRepositoryRequest_Data()
}

type CreateRepositoryRequest_Header struct {
	Header *CreateRepositoryRequestHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type CreateRepositoryRequest_File struct {
	File *FileUpload `protobuf:"bytes,2,opt,name=file,proto3,oneof"`
}

func (*CreateRepositoryRequest_Header) isCreateRepositoryRequest_Data() {}

func (*CreateRepositoryRequest_File) isCreateRepositoryRequest_Data() {}

type CreateRepositoryRequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *WriteRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DefaultBranch string        `protobuf:"bytes,2,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
	Author        *Identity     `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Committer     *Identity     `protobuf:"bytes,4,opt,name=committer,proto3" json:"committer,omitempty"`
}

func (x *CreateRepositoryRequestHeader) Reset() {
	*x = CreateRepositoryRequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepositoryRequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryRequestHeader) ProtoMessage() {}

func (x *CreateRepositoryRequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryRequestHeader.ProtoReflect.Descriptor instead.
func (*CreateRepositoryRequestHeader) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRepositoryRequestHeader) GetBase() *WriteRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CreateRepositoryRequestHeader) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

func (x *CreateRepositoryRequestHeader) GetAuthor() *Identity {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *CreateRepositoryRequestHeader) GetCommitter() *Identity {
	if x != nil {
		return x.Committer
	}
	return nil
}

type CreateRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRepositoryResponse) Reset() {
	*x = CreateRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryResponse) ProtoMessage() {}

func (x *CreateRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryResponse.ProtoReflect.Descriptor instead.
func (*CreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{2}
}

type GetTreeNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	GitRef              string       `protobuf:"bytes,2,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
	Path                string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	IncludeLatestCommit bool         `protobuf:"varint,4,opt,name=include_latest_commit,json=includeLatestCommit,proto3" json:"include_latest_commit,omitempty"`
}

func (x *GetTreeNodeRequest) Reset() {
	*x = GetTreeNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeNodeRequest) ProtoMessage() {}

func (x *GetTreeNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeNodeRequest.ProtoReflect.Descriptor instead.
func (*GetTreeNodeRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{3}
}

func (x *GetTreeNodeRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetTreeNodeRequest) GetGitRef() string {
	if x != nil {
		return x.GitRef
	}
	return ""
}

func (x *GetTreeNodeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetTreeNodeRequest) GetIncludeLatestCommit() bool {
	if x != nil {
		return x.IncludeLatestCommit
	}
	return false
}

type GetTreeNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node   *TreeNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Commit *Commit   `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *GetTreeNodeResponse) Reset() {
	*x = GetTreeNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeNodeResponse) ProtoMessage() {}

func (x *GetTreeNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeNodeResponse.ProtoReflect.Descriptor instead.
func (*GetTreeNodeResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{4}
}

func (x *GetTreeNodeResponse) GetNode() *TreeNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetTreeNodeResponse) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type ListTreeNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	GitRef              string       `protobuf:"bytes,2,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
	Path                string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	IncludeLatestCommit bool         `protobuf:"varint,4,opt,name=include_latest_commit,json=includeLatestCommit,proto3" json:"include_latest_commit,omitempty"`
	Recursive           bool         `protobuf:"varint,5,opt,name=recursive,proto3" json:"recursive,omitempty"`
}

func (x *ListTreeNodesRequest) Reset() {
	*x = ListTreeNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreeNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreeNodesRequest) ProtoMessage() {}

func (x *ListTreeNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreeNodesRequest.ProtoReflect.Descriptor instead.
func (*ListTreeNodesRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{5}
}

func (x *ListTreeNodesRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ListTreeNodesRequest) GetGitRef() string {
	if x != nil {
		return x.GitRef
	}
	return ""
}

func (x *ListTreeNodesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListTreeNodesRequest) GetIncludeLatestCommit() bool {
	if x != nil {
		return x.IncludeLatestCommit
	}
	return false
}

func (x *ListTreeNodesRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type ListTreeNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node   *TreeNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Commit *Commit   `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *ListTreeNodesResponse) Reset() {
	*x = ListTreeNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreeNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreeNodesResponse) ProtoMessage() {}

func (x *ListTreeNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreeNodesResponse.ProtoReflect.Descriptor instead.
func (*ListTreeNodesResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{6}
}

func (x *ListTreeNodesResponse) GetNode() *TreeNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ListTreeNodesResponse) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type TreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type TreeNodeType `protobuf:"varint,1,opt,name=type,proto3,enum=rpc.TreeNodeType" json:"type,omitempty"`
	Mode TreeNodeMode `protobuf:"varint,2,opt,name=mode,proto3,enum=rpc.TreeNodeMode" json:"mode,omitempty"`
	Sha  string       `protobuf:"bytes,3,opt,name=sha,proto3" json:"sha,omitempty"`
	Name string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Path string       `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *TreeNode) Reset() {
	*x = TreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNode) ProtoMessage() {}

func (x *TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNode.ProtoReflect.Descriptor instead.
func (*TreeNode) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{7}
}

func (x *TreeNode) GetType() TreeNodeType {
	if x != nil {
		return x.Type
	}
	return TreeNodeType_TreeNodeTypeTree
}

func (x *TreeNode) GetMode() TreeNodeMode {
	if x != nil {
		return x.Mode
	}
	return TreeNodeMode_TreeNodeModeFile
}

func (x *TreeNode) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *TreeNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreeNode) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Sha  string       `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (x *GetCommitRequest) Reset() {
	*x = GetCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitRequest) ProtoMessage() {}

func (x *GetCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitRequest.ProtoReflect.Descriptor instead.
func (*GetCommitRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{8}
}

func (x *GetCommitRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetCommitRequest) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

type GetCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit *Commit `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *GetCommitResponse) Reset() {
	*x = GetCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitResponse) ProtoMessage() {}

func (x *GetCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitResponse.ProtoReflect.Descriptor instead.
func (*GetCommitResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommitResponse) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type ListCommitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	GitRef    string       `protobuf:"bytes,2,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
	After     string       `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	Page      int32        `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32        `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Path      string       `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Since     int64        `protobuf:"varint,7,opt,name=since,proto3" json:"since,omitempty"`
	Until     int64        `protobuf:"varint,8,opt,name=until,proto3" json:"until,omitempty"`
	Committer string       `protobuf:"bytes,9,opt,name=committer,proto3" json:"committer,omitempty"`
}

func (x *ListCommitsRequest) Reset() {
	*x = ListCommitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsRequest) ProtoMessage() {}

func (x *ListCommitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsRequest.ProtoReflect.Descriptor instead.
func (*ListCommitsRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{10}
}

func (x *ListCommitsRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ListCommitsRequest) GetGitRef() string {
	if x != nil {
		return x.GitRef
	}
	return ""
}

func (x *ListCommitsRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListCommitsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCommitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCommitsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListCommitsRequest) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *ListCommitsRequest) GetUntil() int64 {
	if x != nil {
		return x.Until
	}
	return 0
}

func (x *ListCommitsRequest) GetCommitter() string {
	if x != nil {
		return x.Committer
	}
	return ""
}

type ListCommitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit        *Commit          `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	RenameDetails []*RenameDetails `protobuf:"bytes,2,rep,name=rename_details,json=renameDetails,proto3" json:"rename_details,omitempty"`
}

func (x *ListCommitsResponse) Reset() {
	*x = ListCommitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCommitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsResponse) ProtoMessage() {}

func (x *ListCommitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsResponse.ProtoReflect.Descriptor instead.
func (*ListCommitsResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{11}
}

func (x *ListCommitsResponse) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *ListCommitsResponse) GetRenameDetails() []*RenameDetails {
	if x != nil {
		return x.RenameDetails
	}
	return nil
}

type RenameDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPath         string `protobuf:"bytes,1,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"`
	NewPath         string `protobuf:"bytes,2,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
	CommitShaBefore string `protobuf:"bytes,3,opt,name=commit_sha_before,json=commitShaBefore,proto3" json:"commit_sha_before,omitempty"`
	CommitShaAfter  string `protobuf:"bytes,4,opt,name=commit_sha_after,json=commitShaAfter,proto3" json:"commit_sha_after,omitempty"`
}

func (x *RenameDetails) Reset() {
	*x = RenameDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameDetails) ProtoMessage() {}

func (x *RenameDetails) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameDetails.ProtoReflect.Descriptor instead.
func (*RenameDetails) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{12}
}

func (x *RenameDetails) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *RenameDetails) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

func (x *RenameDetails) GetCommitShaBefore() string {
	if x != nil {
		return x.CommitShaBefore
	}
	return ""
}

func (x *RenameDetails) GetCommitShaAfter() string {
	if x != nil {
		return x.CommitShaAfter
	}
	return ""
}

type GetBlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Sha       string       `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	SizeLimit int64        `protobuf:"varint,3,opt,name=size_limit,json=sizeLimit,proto3" json:"size_limit,omitempty"`
}

func (x *GetBlobRequest) Reset() {
	*x = GetBlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobRequest) ProtoMessage() {}

func (x *GetBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobRequest.ProtoReflect.Descriptor instead.
func (*GetBlobRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlobRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetBlobRequest) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *GetBlobRequest) GetSizeLimit() int64 {
	if x != nil {
		return x.SizeLimit
	}
	return 0
}

type GetBlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*GetBlobResponse_Header
	//	*GetBlobResponse_Content
	Data isGetBlobResponse_Data `protobuf_oneof:"data"`
}

func (x *GetBlobResponse) Reset() {
	*x = GetBlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobResponse) ProtoMessage() {}

func (x *GetBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobResponse.ProtoReflect.Descriptor instead.
func (*GetBlobResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{14}
}

func (m *GetBlobResponse) GetData() isGetBlobResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GetBlobResponse) GetHeader() *GetBlobResponseHeader {
	if x, ok := x.GetData().(*GetBlobResponse_Header); ok {
		return x.Header
	}
	return nil
}

func (x *GetBlobResponse) GetContent() []byte {
	if x, ok := x.GetData().(*GetBlobResponse_Content); ok {
		return x.Content
	}
	return nil
}

type isGetBlobResponse_Data interface {
	isGetBlobResponse_Data()
}

type GetBlobResponse_Header struct {
	Header *GetBlobResponseHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type GetBlobResponse_Content struct {
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}

func (*GetBlobResponse_Header) isGetBlobResponse_Data() {}

func (*GetBlobResponse_Content) isGetBlobResponse_Data() {}

type GetBlobResponseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha         string `protobuf:"bytes,1,opt,name=sha,proto3" json:"sha,omitempty"`
	Size        int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ContentSize int64  `protobuf:"varint,3,opt,name=content_size,json=contentSize,proto3" json:"content_size,omitempty"`
}

func (x *GetBlobResponseHeader) Reset() {
	*x = GetBlobResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobResponseHeader) ProtoMessage() {}

func (x *GetBlobResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobResponseHeader.ProtoReflect.Descriptor instead.
func (*GetBlobResponseHeader) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{15}
}

func (x *GetBlobResponseHeader) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *GetBlobResponseHeader) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetBlobResponseHeader) GetContentSize() int64 {
	if x != nil {
		return x.ContentSize
	}
	return 0
}

type GetSubmoduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	GitRef string       `protobuf:"bytes,2,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
	Path   string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetSubmoduleRequest) Reset() {
	*x = GetSubmoduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmoduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmoduleRequest) ProtoMessage() {}

func (x *GetSubmoduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmoduleRequest.ProtoReflect.Descriptor instead.
func (*GetSubmoduleRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{16}
}

func (x *GetSubmoduleRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetSubmoduleRequest) GetGitRef() string {
	if x != nil {
		return x.GitRef
	}
	return ""
}

func (x *GetSubmoduleRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetSubmoduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submodule *Submodule `protobuf:"bytes,1,opt,name=submodule,proto3" json:"submodule,omitempty"`
}

func (x *GetSubmoduleResponse) Reset() {
	*x = GetSubmoduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmoduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmoduleResponse) ProtoMessage() {}

func (x *GetSubmoduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmoduleResponse.ProtoReflect.Descriptor instead.
func (*GetSubmoduleResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{17}
}

func (x *GetSubmoduleResponse) GetSubmodule() *Submodule {
	if x != nil {
		return x.Submodule
	}
	return nil
}

type Submodule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Submodule) Reset() {
	*x = Submodule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submodule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submodule) ProtoMessage() {}

func (x *Submodule) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submodule.ProtoReflect.Descriptor instead.
func (*Submodule) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{18}
}

func (x *Submodule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Submodule) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetCommitDivergencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *ReadRequest               `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	MaxCount int32                      `protobuf:"varint,2,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	Requests []*CommitDivergenceRequest `protobuf:"bytes,3,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetCommitDivergencesRequest) Reset() {
	*x = GetCommitDivergencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitDivergencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitDivergencesRequest) ProtoMessage() {}

func (x *GetCommitDivergencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitDivergencesRequest.ProtoReflect.Descriptor instead.
func (*GetCommitDivergencesRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{19}
}

func (x *GetCommitDivergencesRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetCommitDivergencesRequest) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *GetCommitDivergencesRequest) GetRequests() []*CommitDivergenceRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type CommitDivergenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *CommitDivergenceRequest) Reset() {
	*x = CommitDivergenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitDivergenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitDivergenceRequest) ProtoMessage() {}

func (x *CommitDivergenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitDivergenceRequest.ProtoReflect.Descriptor instead.
func (*CommitDivergenceRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{20}
}

func (x *CommitDivergenceRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CommitDivergenceRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GetCommitDivergencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Divergences []*CommitDivergence `protobuf:"bytes,1,rep,name=divergences,proto3" json:"divergences,omitempty"`
}

func (x *GetCommitDivergencesResponse) Reset() {
	*x = GetCommitDivergencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommitDivergencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitDivergencesResponse) ProtoMessage() {}

func (x *GetCommitDivergencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitDivergencesResponse.ProtoReflect.Descriptor instead.
func (*GetCommitDivergencesResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{21}
}

func (x *GetCommitDivergencesResponse) GetDivergences() []*CommitDivergence {
	if x != nil {
		return x.Divergences
	}
	return nil
}

type CommitDivergence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ahead  int32 `protobuf:"varint,1,opt,name=ahead,proto3" json:"ahead,omitempty"`
	Behind int32 `protobuf:"varint,2,opt,name=behind,proto3" json:"behind,omitempty"`
}

func (x *CommitDivergence) Reset() {
	*x = CommitDivergence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitDivergence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitDivergence) ProtoMessage() {}

func (x *CommitDivergence) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitDivergence.ProtoReflect.Descriptor instead.
func (*CommitDivergence) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{22}
}

func (x *CommitDivergence) GetAhead() int32 {
	if x != nil {
		return x.Ahead
	}
	return 0
}

func (x *CommitDivergence) GetBehind() int32 {
	if x != nil {
		return x.Behind
	}
	return 0
}

type DeleteRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *WriteRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DeleteRepositoryRequest) Reset() {
	*x = DeleteRepositoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryRequest) ProtoMessage() {}

func (x *DeleteRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteRepositoryRequest) GetBase() *WriteRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

type DeleteRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRepositoryResponse) Reset() {
	*x = DeleteRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryResponse) ProtoMessage() {}

func (x *DeleteRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{24}
}

type MergeBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *ReadRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Ref1 string       `protobuf:"bytes,2,opt,name=ref1,proto3" json:"ref1,omitempty"`
	Ref2 string       `protobuf:"bytes,3,opt,name=ref2,proto3" json:"ref2,omitempty"`
}

func (x *MergeBaseRequest) Reset() {
	*x = MergeBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeBaseRequest) ProtoMessage() {}

func (x *MergeBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeBaseRequest.ProtoReflect.Descriptor instead.
func (*MergeBaseRequest) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{25}
}

func (x *MergeBaseRequest) GetBase() *ReadRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MergeBaseRequest) GetRef1() string {
	if x != nil {
		return x.Ref1
	}
	return ""
}

func (x *MergeBaseRequest) GetRef2() string {
	if x != nil {
		return x.Ref2
	}
	return ""
}

type MergeBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MergeBaseSha string `protobuf:"bytes,1,opt,name=merge_base_sha,json=mergeBaseSha,proto3" json:"merge_base_sha,omitempty"`
}

func (x *MergeBaseResponse) Reset() {
	*x = MergeBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repo_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeBaseResponse) ProtoMessage() {}

func (x *MergeBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repo_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeBaseResponse.ProtoReflect.Descriptor instead.
func (*MergeBaseResponse) Descriptor() ([]byte, []int) {
	return file_repo_proto_rawDescGZIP(), []int{26}
}

func (x *MergeBaseResponse) GetMergeBaseSha() string {
	if x != nil {
		return x.MergeBaseSha
	}
	return ""
}

var File_repo_proto protoreflect.FileDescriptor

var file_repo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70,
	0x63, 0x1a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x86, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x2b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x22, 0x1a, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x52, 0x65, 0x66, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x69, 0x76, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22,
	0xf1, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x69, 0x74, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12,
	0x39, 0x0a, 0x0e, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x61, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x53, 0x68, 0x61, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x68, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x60,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x68, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x69, 0x74, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x22, 0x31, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0x3d, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22,
	0x57, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x76, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0b, 0x64, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x64, 0x69, 0x76,
	0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x68, 0x65,
	0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x68, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x62, 0x65, 0x68, 0x69, 0x6e, 0x64, 0x22, 0x40, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x10, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x65, 0x66, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x66, 0x32, 0x22, 0x39, 0x0a, 0x11, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x53, 0x68, 0x61, 0x2a, 0x52, 0x0a, 0x0c, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x72, 0x65, 0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x10, 0x02, 0x2a, 0x81, 0x01, 0x0a, 0x0c, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x65, 0x63, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x54,
	0x72, 0x65, 0x65, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x10, 0x04, 0x32, 0xd9, 0x05,
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x62, 0x12, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x42, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x17,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x76, 0x65,
	0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x09, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x15, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x67, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x67, 0x69, 0x74, 0x72, 0x70, 0x63, 0x2f, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_repo_proto_rawDescOnce sync.Once
	file_repo_proto_rawDescData = file_repo_proto_rawDesc
)

func file_repo_proto_rawDescGZIP() []byte {
	file_repo_proto_rawDescOnce.Do(func() {
		file_repo_proto_rawDescData = protoimpl.X.CompressGZIP(file_repo_proto_rawDescData)
	})
	return file_repo_proto_rawDescData
}

var file_repo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_repo_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_repo_proto_goTypes = []interface{}{
	(TreeNodeType)(0),                     // 0: rpc.TreeNodeType
	(TreeNodeMode)(0),                     // 1: rpc.TreeNodeMode
	(*CreateRepositoryRequest)(nil),       // 2: rpc.CreateRepositoryRequest
	(*CreateRepositoryRequestHeader)(nil), // 3: rpc.CreateRepositoryRequestHeader
	(*CreateRepositoryResponse)(nil),      // 4: rpc.CreateRepositoryResponse
	(*GetTreeNodeRequest)(nil),            // 5: rpc.GetTreeNodeRequest
	(*GetTreeNodeResponse)(nil),           // 6: rpc.GetTreeNodeResponse
	(*ListTreeNodesRequest)(nil),          // 7: rpc.ListTreeNodesRequest
	(*ListTreeNodesResponse)(nil),         // 8: rpc.ListTreeNodesResponse
	(*TreeNode)(nil),                      // 9: rpc.TreeNode
	(*GetCommitRequest)(nil),              // 10: rpc.GetCommitRequest
	(*GetCommitResponse)(nil),             // 11: rpc.GetCommitResponse
	(*ListCommitsRequest)(nil),            // 12: rpc.ListCommitsRequest
	(*ListCommitsResponse)(nil),           // 13: rpc.ListCommitsResponse
	(*RenameDetails)(nil),                 // 14: rpc.RenameDetails
	(*GetBlobRequest)(nil),                // 15: rpc.GetBlobRequest
	(*GetBlobResponse)(nil),               // 16: rpc.GetBlobResponse
	(*GetBlobResponseHeader)(nil),         // 17: rpc.GetBlobResponseHeader
	(*GetSubmoduleRequest)(nil),           // 18: rpc.GetSubmoduleRequest
	(*GetSubmoduleResponse)(nil),          // 19: rpc.GetSubmoduleResponse
	(*Submodule)(nil),                     // 20: rpc.Submodule
	(*GetCommitDivergencesRequest)(nil),   // 21: rpc.GetCommitDivergencesRequest
	(*CommitDivergenceRequest)(nil),       // 22: rpc.CommitDivergenceRequest
	(*GetCommitDivergencesResponse)(nil),  // 23: rpc.GetCommitDivergencesResponse
	(*CommitDivergence)(nil),              // 24: rpc.CommitDivergence
	(*DeleteRepositoryRequest)(nil),       // 25: rpc.DeleteRepositoryRequest
	(*DeleteRepositoryResponse)(nil),      // 26: rpc.DeleteRepositoryResponse
	(*MergeBaseRequest)(nil),              // 27: rpc.MergeBaseRequest
	(*MergeBaseResponse)(nil),             // 28: rpc.MergeBaseResponse
	(*FileUpload)(nil),                    // 29: rpc.FileUpload
	(*WriteRequest)(nil),                  // 30: rpc.WriteRequest
	(*Identity)(nil),                      // 31: rpc.Identity
	(*ReadRequest)(nil),                   // 32: rpc.ReadRequest
	(*Commit)(nil),                        // 33: rpc.Commit
}
var file_repo_proto_depIdxs = []int32{
	3,  // 0: rpc.CreateRepositoryRequest.header:type_name -> rpc.CreateRepositoryRequestHeader
	29, // 1: rpc.CreateRepositoryRequest.file:type_name -> rpc.FileUpload
	30, // 2: rpc.CreateRepositoryRequestHeader.base:type_name -> rpc.WriteRequest
	31, // 3: rpc.CreateRepositoryRequestHeader.author:type_name -> rpc.Identity
	31, // 4: rpc.CreateRepositoryRequestHeader.committer:type_name -> rpc.Identity
	32, // 5: rpc.GetTreeNodeRequest.base:type_name -> rpc.ReadRequest
	9,  // 6: rpc.GetTreeNodeResponse.node:type_name -> rpc.TreeNode
	33, // 7: rpc.GetTreeNodeResponse.commit:type_name -> rpc.Commit
	32, // 8: rpc.ListTreeNodesRequest.base:type_name -> rpc.ReadRequest
	9,  // 9: rpc.ListTreeNodesResponse.node:type_name -> rpc.TreeNode
	33, // 10: rpc.ListTreeNodesResponse.commit:type_name -> rpc.Commit
	0,  // 11: rpc.TreeNode.type:type_name -> rpc.TreeNodeType
	1,  // 12: rpc.TreeNode.mode:type_name -> rpc.TreeNodeMode
	32, // 13: rpc.GetCommitRequest.base:type_name -> rpc.ReadRequest
	33, // 14: rpc.GetCommitResponse.commit:type_name -> rpc.Commit
	32, // 15: rpc.ListCommitsRequest.base:type_name -> rpc.ReadRequest
	33, // 16: rpc.ListCommitsResponse.commit:type_name -> rpc.Commit
	14, // 17: rpc.ListCommitsResponse.rename_details:type_name -> rpc.RenameDetails
	32, // 18: rpc.GetBlobRequest.base:type_name -> rpc.ReadRequest
	17, // 19: rpc.GetBlobResponse.header:type_name -> rpc.GetBlobResponseHeader
	32, // 20: rpc.GetSubmoduleRequest.base:type_name -> rpc.ReadRequest
	20, // 21: rpc.GetSubmoduleResponse.submodule:type_name -> rpc.Submodule
	32, // 22: rpc.GetCommitDivergencesRequest.base:type_name -> rpc.ReadRequest
	22, // 23: rpc.GetCommitDivergencesRequest.requests:type_name -> rpc.CommitDivergenceRequest
	24, // 24: rpc.GetCommitDivergencesResponse.divergences:type_name -> rpc.CommitDivergence
	30, // 25: rpc.DeleteRepositoryRequest.base:type_name -> rpc.WriteRequest
	32, // 26: rpc.MergeBaseRequest.base:type_name -> rpc.ReadRequest
	2,  // 27: rpc.RepositoryService.CreateRepository:input_type -> rpc.CreateRepositoryRequest
	5,  // 28: rpc.RepositoryService.GetTreeNode:input_type -> rpc.GetTreeNodeRequest
	7,  // 29: rpc.RepositoryService.ListTreeNodes:input_type -> rpc.ListTreeNodesRequest
	18, // 30: rpc.RepositoryService.GetSubmodule:input_type -> rpc.GetSubmoduleRequest
	15, // 31: rpc.RepositoryService.GetBlob:input_type -> rpc.GetBlobRequest
	12, // 32: rpc.RepositoryService.ListCommits:input_type -> rpc.ListCommitsRequest
	10, // 33: rpc.RepositoryService.GetCommit:input_type -> rpc.GetCommitRequest
	21, // 34: rpc.RepositoryService.GetCommitDivergences:input_type -> rpc.GetCommitDivergencesRequest
	25, // 35: rpc.RepositoryService.DeleteRepository:input_type -> rpc.DeleteRepositoryRequest
	27, // 36: rpc.RepositoryService.MergeBase:input_type -> rpc.MergeBaseRequest
	4,  // 37: rpc.RepositoryService.CreateRepository:output_type -> rpc.CreateRepositoryResponse
	6,  // 38: rpc.RepositoryService.GetTreeNode:output_type -> rpc.GetTreeNodeResponse
	8,  // 39: rpc.RepositoryService.ListTreeNodes:output_type -> rpc.ListTreeNodesResponse
	19, // 40: rpc.RepositoryService.GetSubmodule:output_type -> rpc.GetSubmoduleResponse
	16, // 41: rpc.RepositoryService.GetBlob:output_type -> rpc.GetBlobResponse
	13, // 42: rpc.RepositoryService.ListCommits:output_type -> rpc.ListCommitsResponse
	11, // 43: rpc.RepositoryService.GetCommit:output_type -> rpc.GetCommitResponse
	23, // 44: rpc.RepositoryService.GetCommitDivergences:output_type -> rpc.GetCommitDivergencesResponse
	26, // 45: rpc.RepositoryService.DeleteRepository:output_type -> rpc.DeleteRepositoryResponse
	28, // 46: rpc.RepositoryService.MergeBase:output_type -> rpc.MergeBaseResponse
	37, // [37:47] is the sub-list for method output_type
	27, // [27:37] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_repo_proto_init() }
func file_repo_proto_init() {
	if File_repo_proto != nil {
		return
	}
	file_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_repo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepositoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepositoryRequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreeNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreeNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCommitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmoduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmoduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submodule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitDivergencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitDivergenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommitDivergencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitDivergence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepositoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repo_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_repo_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreateRepositoryRequest_Header)(nil),
		(*CreateRepositoryRequest_File)(nil),
	}
	file_repo_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*GetBlobResponse_Header)(nil),
		(*GetBlobResponse_Content)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_repo_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_repo_proto_goTypes,
		DependencyIndexes: file_repo_proto_depIdxs,
		EnumInfos:         file_repo_proto_enumTypes,
		MessageInfos:      file_repo_proto_msgTypes,
	}.Build()
	File_repo_proto = out.File
	file_repo_proto_rawDesc = nil
	file_repo_proto_goTypes = nil
	file_repo_proto_depIdxs = nil
}
